<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--引入配置文件-->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties" />
    </bean>

    <!--创建jdbc数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
    </bean>
    <!-- 创建SqlSessionFactory，同时指定数据源-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--         <property  name="mapperLocations"  value="classpath:*.xml"/> -->
    </bean>

<!--    <bean id="sqlTemplate" class="org.mybatis.spring.SqlSessionTemplate">-->
<!--        <constructor-arg index="0" ref="sqlSessionFactoryBean" />-->
<!--    </bean>-->

    <!--注 意 , 没 有 必 要 去 指 定 SqlSessionFactory 或 SqlSessionTemplate ,
    因 为 MapperScannerConfigurer 将会创建 MapperFactoryBean,之后自动装配-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.demo.mapper"/>
        <!--那么MyBatis的接口只有包含该注解，才会被扫描进去。-->
<!--        <property name="annotationClass" value="XXX"/>-->
        <!--只有当你配置多数据源的时候，这是会有多个sqlSessionFactory才会用到-->
<!--        <property name="sqlSessionFactoryBeanName" ref="sqlSessionFactory"/>-->
    </bean>


</beans>